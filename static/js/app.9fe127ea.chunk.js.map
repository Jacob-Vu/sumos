{"version":3,"sources":["utils/Extensions.ts","models/TaskItem.ts","firebase/config.ts","stores/TaskStore.ts","stores/SelectTaskStore.ts","stores/RootStore.ts","components/TodayTasks.tsx","App.tsx"],"names":["Date","prototype","format","mm","this","getMonth","dd","getDate","getFullYear","join","String","toDate","items","split","TaskItem","taskStore","id","task","cat","time","freqPerWeek","isSelected","isCompleted","toggleComplete","observable","action","fire","db","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","TaskStore","a","async","collection","doc","set","lastUpdated","workList","user","dateSl","taskList","get","userDoc","docPath","taskDoc","selectedTasks","data","exists","forEach","v","selectedItem","find","x","taskId","taskItem","fromTask","push","console","log","filterTasks","filter","map","attachments","date","orderBy","computed","SelectTaskStore","dateStr","selectDoc","doneDoc","newItems","doneTasks","includes","rootStore","selectTaskStore","storesContext","React","createContext","styles","StyleSheet","create","baseText","fontSize","titleText","fontWeight","result","marginLeft","marginBottom","color","TodayTasksScreen","props","useState","setDate","loading","setLoading","updateCount","setUpdateCount","useContext","setTaskList","useEffect","migrateData","loadTaskList","then","r","sortedTaskList","SelectDay","val","addDays","ScrollView","View","style","flexDirection","justifyContent","marginTop","Button","size","title","onPress","saveSelectList","totalSelected","totalCompleted","i","key","bottomDivider","backgroundColor","TouchableWithoutFeedback","toggleSelect","value","onValueChange","e","HelloWorldApp","placement","leftComponent","icon","centerComponent","text","rightComponent","heading","TodayTasks"],"mappings":"uEAAAA,KAAKC,UAAUC,OAAS,WACpB,IAAIC,EAAKC,KAAKC,WAAa,EACvBC,EAAKF,KAAKG,UAEd,MAAO,EAAED,EAAG,EAAI,GAAK,KAAOA,GAAIH,EAAG,EAAI,GAAK,KAAOA,EAAGC,KAAKI,eAClDC,KAAK,MAGlBC,OAAOT,UAAUU,OAAS,WACtB,IAAMC,EAAQR,KAAKS,MAAM,KACzB,OAAO,IAAIb,KAAKY,EAAM,GAAGA,EAAM,GAAK,EAAEA,EAAM,M,uRCN3BE,G,aAUjB,WAAYC,EAAWC,EAAIC,EAAMC,EAAKC,EAAMC,GAAsD,IAAD,OAAzCC,EAAyC,wDAArBC,EAAqB,kSAejGC,eAAiB,WACb,EAAKD,aAAe,EAAKA,aAf/BlB,KAAKW,UAAYA,EACjBX,KAAKY,GAAKA,EACJZ,KAAKa,KAAOA,EACZb,KAAKc,IAAMA,EACXd,KAAKe,KAAOA,EAClBf,KAAKgB,YAAcA,EACbhB,KAAKiB,WAAaA,EAClBjB,KAAKkB,YAAcA,E,yCAWvB,SAAgBP,EAAUE,GAA8C,IAAzCI,EAAwC,wDAApBC,EAAoB,wDACnE,OAAO,IAAIR,EAASC,EAAUE,EAAKD,GAAIC,EAAKA,KAAMA,EAAKC,IAAKD,EAAKE,KAAMF,EAAKG,YAAaC,EAAYC,O,6BA5BxGE,K,uFACAA,K,+FACAA,K,wFACAA,K,wFACAA,K,8FACAA,K,+FACAA,K,gGAaAC,K,oFAAsB,WACnB,EAAKJ,YAAc,EAAKA,e,WCZ5BK,G,cAAO,MASEC,IALVD,EAHEE,IAASC,KAAKC,OAGTF,IAASG,MAFTH,IAASI,cAZI,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAUMC,OAEPd,EAAKe,a,2BChBVC,GAAb,qGAEI,oBAAAC,EAAAC,OAAA,gDACIjB,EAAGkB,WAAW,YAAYC,IAAI,WAAWC,IAAI,CACzCC,YAAa,IAAIhD,KACjBiD,SAAU,CAAC,CAAI,GAAM,EAAK,KAAQ,8HAAuE,IAAO,mBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,EAAK,KAAQ,kBAAkB,IAAO,MAAS,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,EAAK,KAAQ,iBAAiB,IAAO,MAAS,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,EAAK,KAAQ,8BAAkB,IAAO,gBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,EAAK,KAAQ,8BAAsB,IAAO,mBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,EAAK,KAAQ,mCAA2B,IAAO,mBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,EAAK,KAAQ,2BAAc,IAAO,uBAAgB,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,EAAK,KAAQ,gBAAW,IAAO,gBAAc,KAAQ,EAAK,YAAe,GAAK,CAAI,GAAM,EAAK,KAAQ,gDAA8B,IAAO,MAAS,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,iDAA2B,IAAO,MAAS,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,2CAA0B,IAAO,MAAS,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,iCAAsB,IAAO,sBAAe,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,8CAA4B,IAAO,sBAAe,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,kBAAa,IAAO,mBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,8BAAsB,IAAO,MAAS,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,yDAAuC,IAAO,mBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,eAAe,IAAO,mBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,uBAAgB,IAAO,gBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,6BAAwB,IAAO,sBAAe,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,yDAA8B,IAAO,mBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,uBAAkB,IAAO,MAAS,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,4EAAmD,IAAO,MAAS,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,2BAAqB,IAAO,MAAS,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,0FAA4D,IAAO,gBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,4BAAkB,IAAO,gBAAc,KAAQ,GAAM,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,aAAgB,IAAO,gBAAc,KAAQ,EAAK,YAAe,GAAK,CAAI,GAAM,GAAM,KAAQ,mDAAkC,IAAO,gBAAc,KAAQ,GAAM,YAAe,MAHpvF,8DAFJ,0BAQI,SAAmBC,EAAKC,GAAxB,8BAAAR,EAAAC,OAAA,uDACIxC,KAAKgD,SAAW,GADpB,WAAAT,EAAA,MAE0BhB,EAAGkB,WAAW,YAAYC,IAAI,WAAWO,OAFnE,cAEUC,EAFV,OAGUC,EAAaL,EAHvB,IAG+BhD,YAAOiD,EAAO,cAH7C,WAAAR,EAAA,MAI0BhB,EAAGkB,WAAW,cAAcC,IAAIS,GAASF,OAJnE,cAIUG,EAJV,OAKUC,EALV,SAK8BD,EAAQE,aALtC,EAK8B,EAAgBD,cAEtCH,EAAQK,QAAUL,EAAQI,OAAOT,SACjCK,EAAQI,OAAOT,SAASW,SAAQ,SAAAC,GAC5B,IAAMC,EAAY,MAAGL,OAAH,EAAGA,EAAeM,MAAK,SAAAC,GAAC,OAAEH,EAAE7C,IAAMgD,EAAEC,UAClDC,EAAWpD,EAASqD,SAASpD,EAAU8C,EAAkB,MAAhBC,EAA9B,MAAmDA,OAAnD,EAAmDA,EAAcxC,aAChF,EAAK8B,SAASgB,KAAKF,MAGvBG,QAAQC,IAAI,uBAdpB,kBAgBWlE,KAAKgD,UAhBhB,+DARJ,4BA2BI,SAAqBF,EAAKC,GAA1B,iBAAAR,EAAAC,OAAA,uDACUW,EAAaL,EADvB,IAC+BhD,YAAOiD,EAAO,cACnCoB,EAAcnE,KAAKgD,SAASoB,QAAO,SAAAR,GAAC,OAAGA,EAAE3C,cAAYoD,KAAK,SAAAxD,GAAI,MAAI,CACpEyD,YAAa,GACbC,KAAM,IAAI3E,KACVgB,GAAIuC,EAAU,IAAMtC,EAAKD,GACzBiD,OAAQhD,EAAKD,GACbM,YAAaL,EAAKK,YAClB4B,WARR,WAAAP,EAAA,MAUiBhB,EAAGkB,WAAW,cAAcC,IAAIS,GAASR,IAAI,CACtDC,YAAa,IAAIhD,KACjByD,cAAec,KAZvB,sGA3BJ,0BA2CI,WACI,OAAOK,IAAQxE,KAAKgD,SAAS,CAAC,aAAa,MAAO,CAAC,OAAO,UA5ClE,0BAgDI,WACI,OAAOhD,KAAKgD,SAASoB,QAAO,SAAAR,GAAC,OAAEA,EAAE1C,eAAaQ,SAjDtD,yBAqDI,WACI,OAAO1B,KAAKgD,SAASoB,QAAO,SAAAR,GAAC,OAAEA,EAAE3C,cAAYS,SAtDrD,4BAyDI,SAAuBd,QAzD3B,mCACKQ,KADL,wEACuC,MADvC,kCA2CKqD,KA3CL,6GAgDKA,KAhDL,4GAqDKA,KArDL,4GAyDKpD,KAzDL,8EA8DMV,EAAY,IAAI2B,ECjEToC,GAAb,8GAGI,SAAkB5B,EAAKyB,GAAvB,yBAAAhC,EAAAC,OAAA,uDACUmC,EAAUJ,EAAKzE,SADzB,WAAAyC,EAAA,MAE4BhB,EAAGkB,WAAW,aAAeK,GAAMJ,IAAIiC,GAAS1B,OAF5E,cAEU2B,EAFV,kBAAArC,EAAA,MAG0BhB,EAAGkB,WAAW,WAAaK,GAAMJ,IAAIiC,GAAS1B,OAHxE,OAGU4B,EAHV,OAIQC,EAAW,GACXC,EAAa,GACX5B,EAAaL,EANvB,IAM+B6B,EACvBE,EAAQtB,QAAUsB,EAAQvB,OAAOyB,WACjCF,EAAQvB,OAAOyB,UAAUvB,SAAQ,SAAAK,GAC/BkB,EAAUf,KAAKH,MAGjBe,EAAUrB,QAAUqB,EAAUtB,OAAOD,eACrCuB,EAAUtB,OAAOD,cAAcG,SAAQ,SAAAK,GACnCiB,EAASd,KAAK,CACVpD,GAAOuC,EAAL,IAAgBU,EAClBA,OAAQA,EACRU,KAAMA,EACNzB,OACA5B,YAAa6D,EAAUC,SAASnB,GAChCS,YAAa,QAIzB/C,EAAGkB,WAAW,cAAcC,IAAIS,GAASR,IAAI,CACzCC,YAAa,IAAIhD,KACjByD,cAAeyB,IA1BvB,+DAHJ,6BAgCI,SAAsBhC,EAAK6B,GAA3B,wBAAApC,EAAAC,OAAA,uDACUW,EAAaL,EADvB,IAC+B6B,EAD/B,WAAApC,EAAA,MAE4BhB,EAAGkB,WAAW,cAAcC,IAAIS,GAASF,OAFrE,QAEU2B,EAFV,QAGkBrB,QAAUqB,EAAUtB,OAAOD,cACrCuB,EAAUtB,OAAOD,cAAcG,SAAQ,SAAA3C,GACnC,EAAKwC,cAAcW,KAAKnD,MAG5BoD,QAAQC,IAAI,uBARpB,gEAhCJ,wCACK9C,KADL,wEACgC,MADhC,GA6CwB,IAAIsD,E,kOCpCtBO,EAAY,IANd,aAAe,YACXjF,KAAKW,UAAY,IAAI2B,EAAUtC,MAC/BA,KAAKkF,gBAAkB,IAAIR,EAAgB1E,OAQ7CmF,EAAgBC,IAAMC,c,iWAAN,IAAyBJ,ICsEzCK,EAASC,IAAWC,OAAO,CAC/BC,SAAU,CACRC,SAAU,IAEZC,UAAW,CACTD,SAAU,GACVE,WAAY,QAEdC,OAAQ,CACNC,WAAY,OACZC,aAAc,GACdL,SAAU,GACVE,WAAY,OACZI,MAAO,SAKIC,GAjGU,SAACC,GACxB,MAAyBC,mBAAS,IAAIvG,MAAtC,WAAOmD,EAAP,KAAcqD,EAAd,KACA,EAA6BD,oBAAS,GAAtC,WAAOE,EAAP,KAAeC,EAAf,KAGA,EAAqCH,mBAAS,GAA9C,WAAOI,EAAP,KAAmBC,EAAnB,KACA,EDI6BpB,IAAMqB,WAAWtB,GCJtCxE,EAAR,EAAQA,UAAWuE,EAAnB,EAAmBA,gBACnB,EAAgCiB,mBAAS,IAAzC,WAAOnD,EAAP,KAAiB0D,EAAjB,KACAC,qBAAU,WACRzB,EAAgB0B,YAAYV,EAAMpD,KAAKC,GACvCpC,EAAUkG,aAAaX,EAAMpD,KAAKC,GAAQ+D,MAAK,SAAAC,GAC7CT,GAAW,GACXI,EAAY/F,EAAUqG,qBAExB,CAACd,EAAMpD,KAAKC,IAEd,IAeMkE,EAAY,SAACC,GACjBZ,GAAW,GACXF,EAAQe,YAAQpE,EAAQmE,KAG1B,OACG,kBAACE,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,cAAe,WAC3B,kBAACF,EAAA,EAAD,CAAMC,MAAO,CAACC,cAAe,MAAOC,eAAgB,eAAgBC,UAAW,GAAI1B,aAAc,KAC9F,kBAAC2B,EAAA,EAAD,CAAQJ,MAAO,CAACK,KAAM,IAAKC,MAAM,gBAAaC,QAAS,kBAAKZ,GAAW,MACvE,kBAACS,EAAA,EAAD,CAAQJ,MAAO,CAACK,KAAM,IAAKC,MAAM,0CAAmBC,QAAS,kBApBjD,EAAAtF,EAAAC,OAAA,kEAAAD,EAAA,MACf5B,EAAUmH,eAAe5B,EAAMpD,KAAKC,IADrB,OAErByD,EAAeD,EAAY,GAFN,+DAqBZ,kBAACmB,EAAA,EAAD,CAAQJ,MAAO,CAACK,KAAM,IAAKC,MAAM,gBAAaC,QAAS,kBAAKZ,EAAU,OAEzE,kBAAC,OAAD,CAAMK,MAAOhC,EAAOO,QAApB,YAAoC/F,YAAOiD,EAAO,cAAlD,KAAmEmD,EAAMpD,KAAzE,yBAAwFnC,EAAUoH,cAAlG,eAAwH,OAAxH,iCAAgJpH,EAAUqH,eAA1J,eAEF,kBAAC,OAAD,CAAMV,MAAO,CAAE5B,SAAU,GAAIE,WAAY,OAAQE,WAAY,GAAIC,aAAc,KAA/E,oCACDM,EAAW,kBAAC,UAAD,MACX,kBAAC,OAAD,KAECrD,EAASqB,KAAI,SAACP,EAAUmE,GAAX,OACZ,kBAAC,WAAD,CAAUC,IAAKD,EAAGE,eAAa,EAACb,MAAO,CAAEc,gBAAiBtE,EAAS7C,WAAY,UAAW,YACtF,kBAAC,OAAD,KACE,kBAACoG,EAAA,EAAD,KACE,kBAACgB,EAAA,EAAD,CAA0BR,QAAS,kBAAmB/D,EArC9DwE,oBACL9B,EAAeD,EAAY,KAqCZ,kBAACc,EAAA,EAAD,KACG,kBAAC,OAAD,CAAMC,MAAOhC,EAAOK,WAAY7B,EAASlD,GAAzC,KAA+CkD,EAASjD,MACxD,kBAAC,OAAD,CAAMyG,MAAOhC,EAAOG,UAApB,aAAoC3B,EAAShD,IAA7C,KACA,kBAAC,OAAD,CAAMwG,MAAOhC,EAAOG,UAApB,sCAAmD3B,EAAS9C,YAA5D,SAKT,kBAAC,QAAD,KAGI8C,EAAS7C,YACR,kBAAC,SAAD,CAAQsH,MAAOzE,EAAS5C,YAAasH,cAAe,SAACC,GAAkB3E,EAxChF3C,iBACLqF,EAAeD,EAAY,c,oBCHhBmC,IAzBO,WACpB,OACI,kBAAC,KAAD,KACE,kBAACtB,EAAA,EAAD,KACE,kBAAC,KAAD,CACEuB,UAAU,OACVC,cAAe,CAAEC,KAAM,OAAQ7C,MAAO,QACtC8C,gBAAiB,CAAEC,KAAM,YAAazB,MAAO,CAAEtB,MAAO,SACtDgD,eAAgB,CAAEH,KAAM,OAAQ7C,MAAO,UAEvC,kBAAC,OAAD,KACE,kBAAC,MAAD,CAAKiD,QAAQ,QACX,kBAACC,GAAD,CAAkBpG,KAAK,UAEzB,kBAAC,MAAD,CAAKmG,QAAQ,QACX,kBAACC,GAAD,CAAkBpG,KAAK,UAEzB,kBAAC,MAAD,CAAKmG,QAAQ,OACX,kBAACC,GAAD,CAAkBpG,KAAK,c","file":"static/js/app.9fe127ea.chunk.js","sourcesContent":["Date.prototype.format = function() {\r\n    var mm = this.getMonth() + 1; // getMonth() is zero-based\r\n    var dd = this.getDate();\r\n\r\n    return [(dd>9 ? \"\" : \"0\") + dd,(mm>9 ? \"\" : \"0\") + mm,this.getFullYear()\r\n           ].join(\"-\");\r\n};\r\n\r\nString.prototype.toDate = function() {\r\n    const items = this.split(\"-\");\r\n    return new Date(items[2],items[1] - 1,items[0]);\r\n};","import { observable, computed, action } from \"mobx\";\r\nimport { TaskStore } from '../stores/TaskStore';\r\nimport taskStore from '../stores/TaskStore';\r\n\r\nexport default class TaskItem {\r\n    taskStore: TaskStore;\r\n    @observable id;\r\n    @observable cat;\r\n    @observable freqPerWeek;\r\n    @observable time;\r\n    @observable task;\r\n    @observable isSelected;\r\n    @observable isCompleted;\r\n\r\n    constructor(taskStore, id, task, cat, time, freqPerWeek,isSelected = false, isCompleted = false) {\r\n\t\tthis.taskStore = taskStore;\r\n\t\tthis.id = id;\r\n        this.task = task;\r\n        this.cat = cat;\r\n        this.time = time;\r\n\t\tthis.freqPerWeek = freqPerWeek;\r\n        this.isSelected = isSelected;\r\n        this.isCompleted = isCompleted;\r\n\t}\r\n\r\n    @action toggleSelect = () => {\r\n        this.isSelected = !this.isSelected;\r\n    }\r\n\r\n    toggleComplete = () => {\r\n        this.isCompleted = !this.isCompleted;\r\n    }\r\n\r\n    static fromTask(taskStore,task,isSelected = false, isCompleted = false){\r\n        return new TaskItem(taskStore,task.id, task.task, task.cat, task.time, task.freqPerWeek, isSelected, isCompleted);\r\n    }\r\n}","import firebase from \"@firebase/app\";\r\nimport \"@firebase/auth\";\r\nimport \"@firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCZ1W91h5gI4Ys3K44apJMX-dfAzKmKOzc\",\r\n    authDomain: \"todo-app-594e8.firebaseapp.com\",\r\n    projectId: \"todo-app-594e8\",\r\n    storageBucket: \"todo-app-594e8.appspot.com\",\r\n    messagingSenderId: \"254618059037\",\r\n    appId: \"1:254618059037:web:2a162824c6e6dfd3d921f4\",\r\n    measurementId: \"G-84M73W8WLD\"\r\n};\r\n\r\nlet fire = null;\r\nif (!firebase.apps.length) {\r\n   fire = firebase.initializeApp(firebaseConfig);\r\n} else {\r\n   fire = firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nexport const auth = fire.auth();\r\n\r\nexport const db = fire.firestore();\r\n\r\nexport default {fire};","import { observable, computed, action, toJS } from \"mobx\";\r\nimport TaskItem from \"../models/TaskItem\";\r\nimport { db } from \"../firebase/config\";\r\nimport \"../utils/Extensions\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport { addDays, format } from \"date-fns\";\r\n\r\nexport class TaskStore {\r\n    @observable taskList: TaskItem[] = [];    \r\n    async migrate() {\r\n        db.collection(\"todolist\").doc(\"default\").set({\r\n            lastUpdated: new Date(),\r\n            workList: [{   \"id\": 1,   \"task\": \"Làm việc nhà: Dọn phòng, dọn nhà vệ sinh, dọn sân thượng, rửa bát\",   \"cat\": \"Việc nhà\",   \"time\": 30,   \"freqPerWeek\": 3 }, {   \"id\": 2,   \"task\": \"Làm Doulingo\",   \"cat\": \"T.A\",   \"time\": 20,   \"freqPerWeek\": 7 }, {   \"id\": 3,   \"task\": \"Làm Scratch\",   \"cat\": \"ICT\",   \"time\": 90,   \"freqPerWeek\": 2 }, {   \"id\": 4,   \"task\": \"Học tầng cầu\",   \"cat\": \"Thể thao\",   \"time\": 30,   \"freqPerWeek\": 2 }, {   \"id\": 5,   \"task\": \"Vẽ tranh, tô màu\",   \"cat\": \"Sáng tạo\",   \"time\": 45,   \"freqPerWeek\": 2 }, {   \"id\": 6,   \"task\": \"Sáng tác truyện tranh\",   \"cat\": \"Sáng tạo\",   \"time\": 60,   \"freqPerWeek\": 2 }, {   \"id\": 7,   \"task\": \"Đánh đàn\",   \"cat\": \"Nghệ thuật\",   \"time\": 15,   \"freqPerWeek\": 3 }, {   \"id\": 8,   \"task\": \"Đu xà\",   \"cat\": \"Thể thao\",   \"time\": 5,   \"freqPerWeek\": 7 }, {   \"id\": 9,   \"task\": \"Thuyết trình về nhân vật\",   \"cat\": \"K.N\",   \"time\": 45,   \"freqPerWeek\": 2 }, {   \"id\": 10,   \"task\": \"Kể chuyện, đọc chuyện\",   \"cat\": \"K.N\",   \"time\": 20,   \"freqPerWeek\": 2 }, {   \"id\": 11,   \"task\": \"Đọc chuyện tiếng anh\",   \"cat\": \"T.A\",   \"time\": 30,   \"freqPerWeek\": 2 }, {   \"id\": 12,   \"task\": \"Làm bài tập toán\",   \"cat\": \"Kiến thức\",   \"time\": 45,   \"freqPerWeek\": 3 }, {   \"id\": 13,   \"task\": \"Làm bài tập Tiếng việt\",   \"cat\": \"Kiến thức\",   \"time\": 45,   \"freqPerWeek\": 3 }, {   \"id\": 14,   \"task\": \"Làm thơ\",   \"cat\": \"Sáng tạo\",   \"time\": 30,   \"freqPerWeek\": 2 }, {   \"id\": 15,   \"task\": \"Làm bài tập Apax\",   \"cat\": \"T.A\",   \"time\": 90,   \"freqPerWeek\": 2 }, {   \"id\": 16,   \"task\": \"Đóng kịch ngắn, làm video Youtube\",   \"cat\": \"Sáng tạo\",   \"time\": 60,   \"freqPerWeek\": 1 }, {   \"id\": 17,   \"task\": \"Ghép lego\",   \"cat\": \"Sáng tạo\",   \"time\": 30,   \"freqPerWeek\": 2 }, {   \"id\": 18,   \"task\": \"Học cờ vua\",   \"cat\": \"Thể thao\",   \"time\": 60,   \"freqPerWeek\": 3 }, {   \"id\": 19,   \"task\": \"Giải toán Kangaroo\",   \"cat\": \"Kiến thức\",   \"time\": 60,   \"freqPerWeek\": 3 }, {   \"id\": 20,   \"task\": \"Nhặt rau, chuẩn bị đồ ăn\",   \"cat\": \"Việc nhà\",   \"time\": 30,   \"freqPerWeek\": 3 }, {   \"id\": 21,   \"task\": \"Viết câu T.A\",   \"cat\": \"T.A\",   \"time\": 15,   \"freqPerWeek\": 7 }, {   \"id\": 22,   \"task\": \"Viết lời thoại, dịch phim hoạt hình Peppa Pig\",   \"cat\": \"T.A\",   \"time\": 30,   \"freqPerWeek\": 1 }, {   \"id\": 23,   \"task\": \"Hát bài hát T.A\",   \"cat\": \"T.A\",   \"time\": 30,   \"freqPerWeek\": 1 }, {   \"id\": 24,   \"task\": \"Tập tâng bóng 20 cái, dẫn chuyền bóng 2 chân (100 cái)\",   \"cat\": \"Thể thao\",   \"time\": 30,   \"freqPerWeek\": 1 }, {   \"id\": 25,   \"task\": \"Múa, uốn dẻo\",   \"cat\": \"Thể thao\",   \"time\": 10,   \"freqPerWeek\": 3 }, {   \"id\": 26,   \"task\": \"Workout 5p\",   \"cat\": \"Thể thao\",   \"time\": 5,   \"freqPerWeek\": 3 }, {   \"id\": 27,   \"task\": \"Bắn cung (2 lần -> 100 điểm)\",   \"cat\": \"Thể thao\",   \"time\": 30,   \"freqPerWeek\": 1 }]\r\n        });\r\n    }\r\n    async loadTaskList(user,dateSl) {\r\n        this.taskList = [];\r\n        const userDoc = await db.collection(\"todolist\").doc(\"default\").get();\r\n        const docPath = `${user}_${format(dateSl,'dd-MM-yyyy')}`;\r\n        const taskDoc = await db.collection(\"selectlist\").doc(docPath).get();\r\n        const selectedTasks: [] = taskDoc.data()?.selectedTasks;\r\n\r\n        if (userDoc.exists && userDoc.data().workList) {\r\n            userDoc.data().workList.forEach(v => {\r\n                const selectedItem = selectedTasks?.find(x=>v.id == x.taskId);\r\n                var taskItem = TaskItem.fromTask(taskStore,v,selectedItem != null,selectedItem?.isCompleted);\r\n                this.taskList.push(taskItem);\r\n            });\r\n        } else {\r\n            console.log(\"No doc values found\");\r\n        }\r\n        return this.taskList;\r\n    }\r\n\r\n    async saveSelectList(user,dateSl){\r\n        const docPath = `${user}_${format(dateSl,'dd-MM-yyyy')}`;\r\n        const filterTasks = this.taskList.filter(x=> x.isSelected).map( task=> ({\r\n            attachments: [],\r\n            date: new Date(),\r\n            id: docPath + '_' + task.id,\r\n            taskId: task.id,\r\n            isCompleted: task.isCompleted,\r\n            user\r\n        }));\r\n        return await db.collection(\"selectlist\").doc(docPath).set({\r\n            lastUpdated: new Date(),\r\n            selectedTasks: filterTasks\r\n        });\r\n    }\r\n\r\n    @computed get sortedTaskList(){\r\n        return orderBy(this.taskList,[\"isSelected\",\"id\"], [\"desc\",\"asc\"]);\r\n    }\r\n\r\n    // can be called as `this.total`\r\n    @computed get totalCompleted() {\r\n        return this.taskList.filter(x=>x.isCompleted).length;\r\n    }\r\n\r\n    // can be called as `this.total`\r\n    @computed get totalSelected() {\r\n        return this.taskList.filter(x=>x.isSelected).length;\r\n    }\r\n\r\n    @action saveSelectTask(id){\r\n       \r\n    }\r\n}\r\n\r\nconst taskStore = new TaskStore();\r\n\r\nexport default taskStore;","import { observable } from \"mobx\";\r\nimport { db } from \"../firebase/config\";\r\nimport \"../utils/Extensions\";\r\n\r\nexport class SelectTaskStore {\r\n    @observable selectedTasks = [];\r\n\r\n    async migrateData(user,date){\r\n        const dateStr = date.format();\r\n        const selectDoc = await db.collection(\"selectlist\" + user).doc(dateStr).get();\r\n        const doneDoc = await db.collection(\"donelist\" + user).doc(dateStr).get();\r\n        let newItems = [];\r\n        let doneTasks  = [];\r\n        const docPath = `${user}_${dateStr}`;\r\n        if (doneDoc.exists && doneDoc.data().doneTasks) {\r\n            doneDoc.data().doneTasks.forEach(taskId => {\r\n              doneTasks.push(taskId);\r\n            });\r\n          }\r\n        if (selectDoc.exists && selectDoc.data().selectedTasks) {\r\n            selectDoc.data().selectedTasks.forEach(taskId => {                \r\n                newItems.push({\r\n                    id: `${docPath}_${taskId}`,\r\n                    taskId: taskId,\r\n                    date: date,\r\n                    user,\r\n                    isCompleted: doneTasks.includes(taskId),\r\n                    attachments: []\r\n                });\r\n            });\r\n        }\r\n        db.collection(\"selectlist\").doc(docPath).set({\r\n            lastUpdated: new Date(),\r\n            selectedTasks: newItems\r\n        });\r\n    }\r\n    async loadSelectTasks(user,dateStr){\r\n        const docPath = `${user}_${dateStr}`;\r\n        const selectDoc = await db.collection(\"selectlist\").doc(docPath).get();\r\n        if (selectDoc.exists && selectDoc.data().selectedTasks) {\r\n            selectDoc.data().selectedTasks.forEach(task => {\r\n                this.selectedTasks.push(task);\r\n            });\r\n        } else {\r\n            console.log(\"No doc values found\");\r\n        }\r\n    }\r\n}\r\n\r\nconst selectTaskStore = new SelectTaskStore();\r\n\r\nexport default selectTaskStore;","import React from 'react';\r\nimport { TaskStore } from './TaskStore';\r\nimport { SelectTaskStore } from './SelectTaskStore';\r\n\r\nclass RootStore {\r\n    taskStore: TaskStore;\r\n    selectTaskStore: SelectTaskStore;\r\n    constructor() {\r\n        this.taskStore = new TaskStore(this);\r\n        this.selectTaskStore = new SelectTaskStore(this);\r\n    }\r\n}\r\n\r\nconst rootStore = new RootStore();\r\n\r\nexport default rootStore;\r\n\r\nconst storesContext = React.createContext({ ...rootStore });\r\nexport const useStores = () => React.useContext(storesContext);\r\n\r\n","import { addDays, format } from \"date-fns\";\r\nimport { Body, List, ListItem, Right, Spinner, Switch, Text } from \"native-base\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, ScrollView, StyleSheet, TouchableWithoutFeedback, View } from \"react-native\";\r\nimport TaskItem from \"../models/TaskItem\";\r\nimport { useStores } from \"../stores/RootStore\";\r\n\r\n\r\nconst TodayTasksScreen = (props) => {\r\n  const [dateSl,setDate] = useState(new Date());\r\n  const [loading,setLoading] = useState(true);\r\n\r\n  // this will be used to force update component\r\n  const [updateCount,setUpdateCount] = useState(0);\r\n  const { taskStore, selectTaskStore } = useStores();\r\n  const [taskList, setTaskList] = useState([]);\r\n  useEffect(()=> {\r\n    selectTaskStore.migrateData(props.user,dateSl);\r\n    taskStore.loadTaskList(props.user,dateSl).then(r => {\r\n      setLoading(false);\r\n      setTaskList(taskStore.sortedTaskList);\r\n    });\r\n  },[props.user,dateSl]);\r\n\r\n  const onSelectItem = (task: TaskItem) => {\r\n    task.toggleSelect();\r\n    setUpdateCount(updateCount+1);\r\n  };\r\n\r\n  const SaveSelectList = async() => {\r\n    await taskStore.saveSelectList(props.user,dateSl);\r\n    setUpdateCount(updateCount+1);\r\n  };\r\n\r\n  const onDoneItem = (task: TaskItem) => {\r\n    task.toggleComplete();\r\n    setUpdateCount(updateCount+1);\r\n  };\r\n\r\n  const SelectDay = (val) => {\r\n    setLoading(true);\r\n    setDate(addDays(dateSl, val));\r\n  };\r\n\r\n  return (\r\n     <ScrollView>\r\n        <View style={{flexDirection: \"column\"}}>\r\n          <View style={{flexDirection: \"row\", justifyContent: \"space-around\", marginTop: 20, marginBottom: 20 }}>\r\n             <Button style={{size: \"\"}} title=\"<< Hôm qua\" onPress={()=> SelectDay(-1)}/>\r\n             <Button style={{size: \"\"}} title=\"Lưu việc đã chọn\" onPress={()=> SaveSelectList()}></Button>\r\n             <Button style={{size: \"\"}} title=\"Hôm sau >>\" onPress={()=> SelectDay(1)}/>\r\n          </View>\r\n          <Text style={styles.result} > Ngày {format(dateSl,\"dd-MM-yyyy\")}, {props.user} đã chọn {taskStore.totalSelected} việc. {\"\\r\\n\"} Đã hoàn thành: {taskStore.totalCompleted} việc</Text>\r\n        </View>\r\n        <Text style={{ fontSize: 18, fontWeight: \"bold\", marginLeft: 15, marginBottom: 20}}>Danh sách công việc: </Text>\r\n      {loading ? (<Spinner/> ):\r\n      (<List>\r\n      {\r\n        taskList.map((taskItem, i) => (\r\n         <ListItem key={i} bottomDivider style={{ backgroundColor: taskItem.isSelected? \"#cde1f9\": \"#fcfcfc\"}}>\r\n             <Body>\r\n               <View>\r\n                 <TouchableWithoutFeedback onPress={() => onSelectItem(taskItem)}>\r\n                   <View>\r\n                      <Text style={styles.titleText}>{taskItem.id}. {taskItem.task}</Text>\r\n                      <Text style={styles.baseText}>Mục: {taskItem.cat} </Text>\r\n                      <Text style={styles.baseText}>Lần chọn theo tuần: {taskItem.freqPerWeek} </Text>\r\n                   </View>\r\n                 </TouchableWithoutFeedback>\r\n               </View>\r\n             </Body>\r\n             <Right>\r\n              {/* <Button title=\"Detail\" onPress={() => Alert.alert('Simple Button pressed')} >\r\n              </Button> */}\r\n               { taskItem.isSelected && (\r\n                  <Switch value={taskItem.isCompleted} onValueChange={(e)=> { onDoneItem(taskItem);}}  />\r\n                )\r\n              }\r\n             </Right>\r\n         </ListItem>\r\n        ))\r\n      }\r\n      </List>)}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  baseText: {\r\n    fontSize: 11,\r\n  },\r\n  titleText: {\r\n    fontSize: 15,\r\n    fontWeight: \"bold\"\r\n  },\r\n  result: {\r\n    marginLeft: \"10px\",\r\n    marginBottom: 20,\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"red\"\r\n  }\r\n});\r\n\r\n\r\nexport default TodayTasksScreen;","import TodayTasksScreen from \"./components/TodayTasks\";\nimport { Tab, Tabs } from \"native-base\";\nimport React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { Header } from \"react-native-elements\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\n\nconst HelloWorldApp = () => {\n  return (\n      <SafeAreaProvider>\n        <ScrollView>\n          <Header\n            placement=\"left\"\n            leftComponent={{ icon: \"menu\", color: \"#fff\" }}\n            centerComponent={{ text: \"SUMO DAYS\", style: { color: \"#fff\" } }}\n            rightComponent={{ icon: \"home\", color: \"#fff\" }}\n          />\n            <Tabs>\n              <Tab heading=\"Susu\">\n                <TodayTasksScreen user=\"Susu\"/>\n              </Tab>\n              <Tab heading=\"Nemo\">\n                <TodayTasksScreen user=\"Nemo\"/>\n              </Tab>\n              <Tab heading=\"Dad\">\n                <TodayTasksScreen user=\"Dad\"/>\n              </Tab>\n            </Tabs>\n          </ScrollView>\n        </SafeAreaProvider>\n  );\n};\nexport default HelloWorldApp;"],"sourceRoot":""}