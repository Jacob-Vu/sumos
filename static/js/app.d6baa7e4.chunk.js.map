{"version":3,"sources":["firebase/config.js","TodayTasks.js","App.js","Extensions.js"],"names":["fire","db","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","styles","StyleSheet","create","baseText","fontSize","titleText","fontWeight","result","marginLeft","marginBottom","color","TodayTasksScreen","props","useState","todoList","setTodoList","selectedTasks","setSelectedTasks","doneTasks","setDoneTasks","Date","format","dateStr","setDate","useEffect","selectTasks","collection","user","doc","get","then","selectDoc","exists","data","forEach","item","push","tdlist","sortTodo","doneDoc","filter","x","includes","userDoc","allTodo","v","console","log","set","list","tasksSelected","sort","y","ID","SelectDay","val","currentDate","toDate","getDate","ScrollView","View","style","flexDirection","justifyContent","marginTop","Button","size","title","onPress","date","map","l","i","key","bottomDivider","backgroundColor","TouchableWithoutFeedback","id","todoTemp","find","selected","selectedTemp","tempDone","onSelectItem","Task","Cat","FreqPerWeek","value","onValueChange","e","Alert","alert","doneTemp","onDoneItem","HelloWorldApp","placement","leftComponent","icon","centerComponent","text","rightComponent","heading","TodayTasks","prototype","mm","this","getMonth","dd","getFullYear","join","String","items","split"],"mappings":"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","file":"static/js/app.d6baa7e4.chunk.js","sourcesContent":["import firebase from '@firebase/app';\r\nimport '@firebase/auth';\r\nimport '@firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCZ1W91h5gI4Ys3K44apJMX-dfAzKmKOzc\",\r\n    authDomain: \"todo-app-594e8.firebaseapp.com\",\r\n    projectId: \"todo-app-594e8\",\r\n    storageBucket: \"todo-app-594e8.appspot.com\",\r\n    messagingSenderId: \"254618059037\",\r\n    appId: \"1:254618059037:web:2a162824c6e6dfd3d921f4\",\r\n    measurementId: \"G-84M73W8WLD\"\r\n};\r\n\r\nlet fire = null;\r\nif (!firebase.apps.length) {\r\n   fire = firebase.initializeApp(firebaseConfig);\r\n}else {\r\n   fire = firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nexport const auth = fire.auth();\r\n\r\nexport const db = fire.firestore();\r\n\r\nexport default {fire};","import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, ScrollView, View, Content, Button, Alert, TouchableWithoutFeedback } from 'react-native';\r\nimport { List, ListItem, Body, Left, Right, Text, Switch, Icon } from 'native-base';\r\n\r\nimport { db } from './firebase/config';\r\nimport './Extensions';\r\nimport color from 'color';\r\n\r\nconst TodayTasksScreen = (props) => {\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [selectedTasks, setSelectedTasks] = useState([]);  \r\n  const [doneTasks, setDoneTasks] = useState([]);\r\n  const [dateStr, setDate] = useState(new Date().format());\r\n\r\n  useEffect(()=>{\r\n    let selectTasks = [];\r\n    let doneTasks = [];\r\n    db.collection('selectlist' + props.user).doc(dateStr).get().then((selectDoc) => {                \r\n      if (selectDoc.exists && selectDoc.data().selectedTasks){      \r\n        selectDoc.data().selectedTasks.forEach(item => {\r\n          selectTasks.push(item);\r\n        });        \r\n      }\r\n      setSelectedTasks(selectTasks);\r\n      if (todoList.length > 0){\r\n        const tdlist = sortTodo(todoList, selectTasks);\r\n        setTodoList(tdlist);\r\n      }\r\n    });\r\n\r\n    db.collection('donelist' + props.user).doc(dateStr).get().then((doneDoc) => {                \r\n      if (doneDoc.exists && doneDoc.data().doneTasks){      \r\n        doneDoc.data().doneTasks.forEach(item => {\r\n          doneTasks.push(item);\r\n        });\r\n      }\r\n      doneTasks = doneTasks.filter(x => selectTasks.includes(x));\r\n      setDoneTasks(doneTasks);\r\n    })\r\n\r\n    if (todoList.length == 0){\r\n      db.collection('todolist').doc('values').get().then((userDoc) =>{      \r\n        if (userDoc.exists && userDoc.data().allTodo){\r\n          let todoList = [];\r\n          userDoc.data().allTodo.forEach(v => {            \r\n            todoList.push(v);\r\n          })\r\n          setTodoList(sortTodo(todoList,selectTasks));\r\n        } else {\r\n          console.log(\"No doc values found\");\r\n          db.collection('todolist').doc('values').set({allTodo: [{   \"ID\": 1,   \"Task\": \"Làm việc nhà: Dọn phòng, dọn nhà vệ sinh, dọn sân thượng, rửa bát\",   \"Cat\": \"Việc nhà\",   \"Time\": 30,   \"FreqPerWeek\": 3 }, {   \"ID\": 2,   \"Task\": \"Làm Doulingo\",   \"Cat\": \"T.A\",   \"Time\": 20,   \"FreqPerWeek\": 7 }, {   \"ID\": 3,   \"Task\": \"Làm Scratch\",   \"Cat\": \"ICT\",   \"Time\": 90,   \"FreqPerWeek\": 2 }, {   \"ID\": 4,   \"Task\": \"Học tầng cầu\",   \"Cat\": \"Thể thao\",   \"Time\": 30,   \"FreqPerWeek\": 2 }, {   \"ID\": 5,   \"Task\": \"Vẽ tranh, tô màu\",   \"Cat\": \"Sáng tạo\",   \"Time\": 45,   \"FreqPerWeek\": 2 }, {   \"ID\": 6,   \"Task\": \"Sáng tác truyện tranh\",   \"Cat\": \"Sáng tạo\",   \"Time\": 60,   \"FreqPerWeek\": 2 }, {   \"ID\": 7,   \"Task\": \"Đánh đàn\",   \"Cat\": \"Nghệ thuật\",   \"Time\": 15,   \"FreqPerWeek\": 3 }, {   \"ID\": 8,   \"Task\": \"Đu xà\",   \"Cat\": \"Thể thao\",   \"Time\": 5,   \"FreqPerWeek\": 7 }, {   \"ID\": 9,   \"Task\": \"Thuyết trình về nhân vật\",   \"Cat\": \"K.N\",   \"Time\": 45,   \"FreqPerWeek\": 2 }, {   \"ID\": 10,   \"Task\": \"Kể chuyện, đọc chuyện\",   \"Cat\": \"K.N\",   \"Time\": 20,   \"FreqPerWeek\": 2 }, {   \"ID\": 11,   \"Task\": \"Đọc chuyện tiếng anh\",   \"Cat\": \"T.A\",   \"Time\": 30,   \"FreqPerWeek\": 2 }, {   \"ID\": 12,   \"Task\": \"Làm bài tập toán\",   \"Cat\": \"Kiến thức\",   \"Time\": 45,   \"FreqPerWeek\": 3 }, {   \"ID\": 13,   \"Task\": \"Làm bài tập Tiếng việt\",   \"Cat\": \"Kiến thức\",   \"Time\": 45,   \"FreqPerWeek\": 3 }, {   \"ID\": 14,   \"Task\": \"Làm thơ\",   \"Cat\": \"Sáng tạo\",   \"Time\": 30,   \"FreqPerWeek\": 2 }, {   \"ID\": 15,   \"Task\": \"Làm bài tập Apax\",   \"Cat\": \"T.A\",   \"Time\": 90,   \"FreqPerWeek\": 2 }, {   \"ID\": 16,   \"Task\": \"Đóng kịch ngắn, làm video Youtube\",   \"Cat\": \"Sáng tạo\",   \"Time\": 60,   \"FreqPerWeek\": 1 }, {   \"ID\": 17,   \"Task\": \"Ghép lego\",   \"Cat\": \"Sáng tạo\",   \"Time\": 30,   \"FreqPerWeek\": 2 }, {   \"ID\": 18,   \"Task\": \"Học cờ vua\",   \"Cat\": \"Thể thao\",   \"Time\": 60,   \"FreqPerWeek\": 3 }, {   \"ID\": 19,   \"Task\": \"Giải toán Kangaroo\",   \"Cat\": \"Kiến thức\",   \"Time\": 60,   \"FreqPerWeek\": 3 }, {   \"ID\": 20,   \"Task\": \"Nhặt rau, chuẩn bị đồ ăn\",   \"Cat\": \"Việc nhà\",   \"Time\": 30,   \"FreqPerWeek\": 3 }, {   \"ID\": 21,   \"Task\": \"Viết câu T.A\",   \"Cat\": \"T.A\",   \"Time\": 15,   \"FreqPerWeek\": 7 }, {   \"ID\": 22,   \"Task\": \"Viết lời thoại, dịch phim hoạt hình Peppa Pig\",   \"Cat\": \"T.A\",   \"Time\": 30,   \"FreqPerWeek\": 1 }, {   \"ID\": 23,   \"Task\": \"Hát bài hát T.A\",   \"Cat\": \"T.A\",   \"Time\": 30,   \"FreqPerWeek\": 1 }, {   \"ID\": 24,   \"Task\": \"Tập tâng bóng 20 cái, dẫn chuyền bóng 2 chân (100 cái)\",   \"Cat\": \"Thể thao\",   \"Time\": 30,   \"FreqPerWeek\": 1 }, {   \"ID\": 25,   \"Task\": \"Múa, uốn dẻo\",   \"Cat\": \"Thể thao\",   \"Time\": 10,   \"FreqPerWeek\": 3 }, {   \"ID\": 26,   \"Task\": \"Workout 5p\",   \"Cat\": \"Thể thao\",   \"Time\": 5,   \"FreqPerWeek\": 3 }, {   \"ID\": 27,   \"Task\": \"Bắn cung (2 lần -> 100 điểm)\",   \"Cat\": \"Thể thao\",   \"Time\": 30,   \"FreqPerWeek\": 1 }]});\r\n        }\r\n      });\r\n    }\r\n\r\n  },[dateStr]);\r\n\r\n  const sortTodo = (list,tasksSelected) => {\r\n    return list.sort((x,y)=> {\r\n      if (tasksSelected.includes(x.ID) && tasksSelected.includes(y.ID) || !tasksSelected.includes(x.ID) && !tasksSelected.includes(y.ID)){\r\n        return x.ID > y.ID;        \r\n      }\r\n      else {\r\n        return tasksSelected.includes(y.ID) - tasksSelected.includes(x.ID);\r\n      }\r\n      // if (!selectedTasks.includes(x.ID) || !selectedTasks.includes(y.ID)){\r\n      //   return selectedTasks.includes(y.ID) - selectedTasks.includes(x.ID);        \r\n      // }\r\n      // else {\r\n      //   return x.ID > y.ID;\r\n      // }\r\n    })\r\n  }\r\n\r\n  const onSelectItem = (id) => {    \r\n    const todoTemp = [...todoList];\r\n    todoTemp.find(x => x.ID == id).selected = !todoTemp.find(x => x.ID == id).selected;            \r\n    let selectedTemp = [];\r\n    if (selectedTasks.includes(id)){\r\n      // User don't want the task, remove it\r\n      selectedTemp = selectedTasks.filter(x => x !== id);      \r\n    }\r\n    else {\r\n      selectedTemp = [...selectedTasks];\r\n      selectedTemp.push(id);\r\n    }\r\n    const tempDone = doneTasks.filter(x => selectedTemp.includes(x));    \r\n    if (doneTasks.length != tempDone.length){\r\n      setDoneTasks(tempDone);\r\n      db.collection('donelist' + props.user).doc(dateStr).set({doneTasks: tempDone, date: new Date()});\r\n    }\r\n    setSelectedTasks(selectedTemp);\r\n    setTodoList(sortTodo(todoTemp,selectedTemp));\r\n  };\r\n\r\n  const SaveSelectList = () => {\r\n    db.collection('selectlist' + props.user).doc(dateStr).set({selectedTasks: selectedTasks, date: new Date()});    \r\n    // setTimeout(() => {\r\n    //   Alert.alert('Xác nhận','Lưu danh sách việc đã chọn',[{\r\n    //     text: 'Không',\r\n    //     style: \"cancel\"\r\n    //   },{\r\n    //     text: 'OK',\r\n    //     onPress: () => {\r\n    //       db.collection('selectlist' + props.user).doc(dateStr).set({selectedTasks: selectedTasks, date: new Date()});\r\n    //     },\r\n    //     style: 'ok'\r\n    //   }],{ cancelable: false });\r\n    // },10);\r\n  }\r\n  \r\n  const onDoneItem = (id) => {\r\n    if (!selectedTasks.includes(id)){\r\n      Alert.alert('This job has not selected!');\r\n    }\r\n    let doneTemp = [];\r\n    if (doneTasks.includes(id)){\r\n      doneTemp = doneTasks.filter(x => x !== id);\r\n    }\r\n    else {\r\n      doneTemp = [...doneTasks];\r\n      doneTemp.push(id);\r\n    }\r\n    doneTemp = doneTemp.filter(x => selectedTasks.includes(x));\r\n    setDoneTasks(doneTemp);\r\n    db.collection('donelist' + props.user).doc(dateStr).set({doneTasks: doneTemp, date: new Date()});\r\n  };  \r\n\r\n  const SelectDay = (val) =>{\r\n    const currentDate = dateStr.toDate();\r\n    currentDate.setDate(currentDate.getDate() + val);    \r\n    setDate(currentDate.format());\r\n  }\r\n\r\n  return (\r\n     <ScrollView>\r\n        <View style={{flexDirection: 'column'}}>\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-around', marginTop: 20, marginBottom: 20 }}>\r\n             <Button style={{size: ''}} title=\"<< Hôm qua\" onPress={()=> SelectDay(-1)}/>\r\n             <Button style={{size: ''}} title=\"Lưu việc đã chọn\" onPress={()=> SaveSelectList()}></Button>\r\n             <Button style={{size: ''}} title=\"Hôm sau >>\" onPress={()=> SelectDay(1)}/>\r\n          </View>\r\n          <Text style={styles.result} > Ngày {dateStr}, {props.user} đã chọn {selectedTasks.length} việc. {\"\\r\\n\"} Đã hoàn thành: {doneTasks.length} việc</Text>\r\n        </View>\r\n        <Text style={{ fontSize: 18, fontWeight: 'bold', marginLeft: 15, marginBottom: 20}}>Danh sách công việc: </Text>\r\n      <List>\r\n      {        \r\n        todoList.map((l, i) => (          \r\n         <ListItem key={i} bottomDivider style={{ backgroundColor: selectedTasks.includes(l.ID)? '#cde1f9': '#fcfcfc'}}>\r\n             <Body>\r\n               <View>\r\n                 <TouchableWithoutFeedback onPress={() => onSelectItem(l.ID)}>\r\n                   <View>\r\n                      <Text style={styles.titleText}>{l.ID}. {l.Task}</Text>\r\n                      <Text style={styles.baseText}>Mục: {l.Cat} </Text>\r\n                      <Text style={styles.baseText}>Lần chọn theo tuần: {l.FreqPerWeek} </Text>\r\n                   </View>\r\n                 </TouchableWithoutFeedback>\r\n               </View>\r\n             </Body>\r\n             <Right>               \r\n              {/* <Button title=\"Detail\" onPress={() => Alert.alert('Simple Button pressed')} >                            \r\n              </Button> */}\r\n               { selectedTasks.includes(l.ID) && (\r\n                  <Switch value={doneTasks.includes(l.ID)} onValueChange={(e)=> { onDoneItem(l.ID)}}  />\r\n                )\r\n              }\r\n             </Right>\r\n         </ListItem>\r\n        ))\r\n      }\r\n      </List>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  baseText: {\r\n    fontSize: 11,\r\n  },\r\n  titleText: {\r\n    fontSize: 15,\r\n    fontWeight: 'bold'   \r\n  },\r\n  result: {\r\n    marginLeft: '10px',\r\n    marginBottom: 20,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: \"red\"\r\n  }\r\n});\r\n\r\n\r\nexport default TodayTasksScreen;","import { Tab, Tabs } from 'native-base';\nimport React from 'react';\nimport { Button, ScrollView, Alert } from 'react-native';\nimport { Header } from 'react-native-elements';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport TodayTasksScreen from './TodayTasks';\n\n\nconst HelloWorldApp = () => {\n  return (\n    <SafeAreaProvider>\n      <ScrollView>\n        <Header\n          placement=\"left\"\n          leftComponent={{ icon: 'menu', color: '#fff' }}\n          centerComponent={{ text: 'SUMO DAYS', style: { color: '#fff' } }}\n          rightComponent={{ icon: 'home', color: '#fff' }}\n        />\n          <Tabs>            \n            <Tab heading=\"Susu\">\n              <TodayTasksScreen user='Susu'/>\n            </Tab>\n            <Tab heading=\"Nemo\">\n              <TodayTasksScreen user='Nemo'/>\n            </Tab>\n            <Tab heading=\"Dad\">\n              <TodayTasksScreen user='Dad'/>\n            </Tab>\n          </Tabs>\n        </ScrollView>\n      </SafeAreaProvider>\n  );\n};\nexport default HelloWorldApp;\n","Date.prototype.format = function() {\r\n    var mm = this.getMonth() + 1; // getMonth() is zero-based\r\n    var dd = this.getDate();\r\n  \r\n    return [(dd>9 ? '' : '0') + dd,(mm>9 ? '' : '0') + mm,this.getFullYear()                    \r\n           ].join('-');\r\n};\r\n\r\nString.prototype.toDate = function(){\r\n    const items = this.split('-');\r\n    return new Date(items[2],items[1] - 1,items[0]);\r\n}"],"sourceRoot":""}